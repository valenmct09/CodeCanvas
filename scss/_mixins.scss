@import 'variables';

// Container 
@mixin flex($direction, $align, $justify) {
    display: flex;
    flex-direction: $direction;
    align-items: $align;
    justify-content: $justify;
}
@mixin grid($columns, $fr-size, $rows: auto, $gap, $auto: false) {
    display: grid;
    grid-template-columns: repeat($columns, $fr-size); 
    grid-template-rows: $rows; 
    gap: $gap; 
    @if $auto == true {
      grid-auto-flow: row; 
    }
}
@mixin minmax($min-width, $max-width, $min-height, $max-height){
    min-width: $min-width;
    max-width: $max-width;
    min-height: $min-height;
    max-height: $max-height;
}

// Position
@mixin fixed($position, $top, $right, $bottom, $left, $translate: 0){
    position: $position;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
    translate: $translate;
}
@mixin center($width, $height) {
    width: $width;
    height: $height;
    margin: auto;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
}

// Elements
@mixin element($width, $height, $padding, $margin) {
    width: $width;
    height: $height;
    padding: $padding;
    margin: $margin;
}
@mixin img($width: 100%, $height: 100%, $object-fit, $object-position, $filter: none){
    width: $width;
    height: $height;
    object-fit: $object-fit;
    object-position: $object-position;
    filter: $filter;
}
@mixin primary-button($bg-color: $primary-color, $text-color: $gray-light, $border-color: $bg-color, $border-radius: 1rem, $padding: 1rem, $font-size: $regular-font-size, $hover-bg-color: darken($bg-color, 10%), $active-bg-color: darken($bg-color, 15%)) {
    background-color: $bg-color;
    color: $text-color;
    border: 0.1rem solid $border-color;
    border-radius: $border-radius;
    padding: $padding;
    font-size: $font-size;
    cursor: pointer;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    transition: background-color 0.3s ease, border-color 0.3s ease;
    &:hover {
        background-color: $hover-bg-color;
        border-color: $hover-bg-color;
    }
    &:active {
        background-color: $active-bg-color;
        border-color: $active-bg-color;
    }
    &:focus {
        outline: none;
        box-shadow: 0 0 0 3px rgba($bg-color, 0.5);
    }
}
@mixin a(
  $font-family: $tertiary-font, 
  $font-size: $regular-font-size, 
  $font-weight: $bold, 
  $color: $black, 
  $hover-color: darken($primary-color, 10%), 
  $active-bg-color: darken($primary-color, 20%)
) {
    font-family: $font-family;
    font-size: $font-size;
    font-weight: $font-weight;
    color: $color;
    text-decoration: none;
    display: inline-block;
    cursor: pointer;
    position: relative; 
    transition: font-size 0.3s ease, opacity 0.3s ease;
    &::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 0.1rem;
        background-color: $black;
        transition: width 0.3s ease;
        transform-origin: left center;
    }
    &:hover {
        font-size: calc(#{$font-size} * 1.1);
        opacity: 0.8; 
    }
    &:hover::after {
        width: 0;
    }
    &:active {
        opacity: 1; 
    }
}
@mixin a-button(
  $font-family: $tertiary-font, 
  $font-size: $regular-font-size, 
  $font-weight: $bold, 
  $color: $black, 
) {
    font-family: $font-family;
    font-size: $font-size;
    font-weight: $font-weight;
    color: $color;
    text-decoration: none;
    display: inline-block;
    cursor: pointer;
    transition: font-size 0.3s ease, opacity 0.3s ease, color 0.3s ease;
    &:hover {
        font-size: calc(#{$font-size} * 1.1);
    }
    &:active {
        opacity: 1;
    }
}
@mixin social-icon(
  $size: 4rem, 
  $bg-color: transparent,
) {
    width: $size;
    height: $size;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    background-color: $bg-color;
    font-size: calc(#{$size}/1.5);
    transition: background-color 0.3s ease, color 0.3s ease;
    cursor: pointer;
    &:hover {
        background-color: rgb(240, 240, 240);
        color: rgb(34, 150, 243);
    }
}

// Styles
@mixin box-shadow($shadow) {
  -webkit-box-shadow: $shadow;
     -moz-box-shadow: $shadow;
          box-shadow: $shadow;
}
@mixin blog-card($bg-color, $border-radius: 1rem, $shadow: 0 0.4rem 0.6rem rgba(0, 0, 0, 0.3), $padding: 2rem, $margin: 0) {
    background-color: $bg-color;
    border-radius: $border-radius;
    box-shadow: $shadow;
    padding: $padding;
    margin: $margin;
}
@mixin font($font-family, $font-size, $font-weight, $color: black, $letter-spacing: auto){
    font-family: $font-family;
    font-size: $font-size;
    font-weight: $font-weight;
    color: $color;
    letter-spacing: $letter-spacing;
}
// State styles
@mixin active-tab($background-color, $color) {
    background-color: $background-color;
    color: $color;
    font-weight: $bold;
}
@mixin tab-navigation {
    display: flex;
    justify-content: space-around;
    align-items: center;
    list-style: none;
    padding: 0;
    margin: 0;
}
  
// Responsive
@mixin responsive($size) {
    @if $size == mobile {
        @media (max-width: #{$breakpoint-xs - 0.1rem}) { @content; } 
    } @else if $size == tablet {
        @media (min-width: $breakpoint-xs) and (max-width: #{$breakpoint-sm - 0.1rem}) { @content; }
    } @else if $size == desktop {
        @media (min-width: $breakpoint-md) and (max-width: #{$breakpoint-lg - 0.1rem}) { @content; }
    } @else if $size == ldesktop {
        @media (min-width: $breakpoint-lg) and (max-width: #{$breakpoint-xl - 0.1rem}) { @content; }
    } @else if $size == xlarge {
        @media (min-width: $breakpoint-xl) { @content; }
    } @else {
        @media (min-width: #{$size}) {
            @content;
        }
    }
}

